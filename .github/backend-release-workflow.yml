name: Release Control Plane Backend

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Install packaging dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y dpkg-dev rpm

      - name: Get version from tag
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "VERSION_NUM=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV
          
      - name: Build binaries
        run: |
          mkdir -p dist
          cd backend
          
          # Build for Linux
          GOOS=linux GOARCH=amd64 go build -v -ldflags="-X 'main.Version=${{ env.VERSION }}'" -o ../dist/ctrlb-backend-linux-amd64 ./cmd/backend
          GOOS=linux GOARCH=arm64 go build -v -ldflags="-X 'main.Version=${{ env.VERSION }}'" -o ../dist/ctrlb-backend-linux-arm64 ./cmd/backend
          
          # Build for macOS
          GOOS=darwin GOARCH=amd64 go build -v -ldflags="-X 'main.Version=${{ env.VERSION }}'" -o ../dist/ctrlb-backend-darwin-amd64 ./cmd/backend
          GOOS=darwin GOARCH=arm64 go build -v -ldflags="-X 'main.Version=${{ env.VERSION }}'" -o ../dist/ctrlb-backend-darwin-arm64 ./cmd/backend
          
          # Build for Windows
          GOOS=windows GOARCH=amd64 go build -v -ldflags="-X 'main.Version=${{ env.VERSION }}'" -o ../dist/ctrlb-backend-windows-amd64.exe ./cmd/backend

      - name: Create DEB packages
        run: |
          # Create package structure for amd64
          mkdir -p deb_amd64/DEBIAN
          mkdir -p deb_amd64/usr/local/bin
          mkdir -p deb_amd64/var/lib/ctrlb
          cp dist/ctrlb-backend-linux-amd64 deb_amd64/usr/local/bin/ctrlb-backend
          
          cat > deb_amd64/DEBIAN/control << EOF
          Package: ctrlb-backend
          Version: ${{ env.VERSION_NUM }}
          Section: base
          Priority: optional
          Architecture: amd64
          Maintainer: CTRLB Team <your.email@example.com>
          Description: CTRLB Control Plane Backend
           Backend service for the CTRLB Control Plane system.
          EOF
          
          dpkg-deb --build deb_amd64 dist/ctrlb-backend-${{ env.VERSION }}-amd64.deb

          # Create package structure for arm64
          mkdir -p deb_arm64/DEBIAN
          mkdir -p deb_arm64/usr/local/bin
          mkdir -p deb_arm64/var/lib/ctrlb
          cp dist/ctrlb-backend-linux-arm64 deb_arm64/usr/local/bin/ctrlb-backend
          
          cat > deb_arm64/DEBIAN/control << EOF
          Package: ctrlb-backend
          Version: ${{ env.VERSION_NUM }}
          Section: base
          Priority: optional
          Architecture: arm64
          Maintainer: CTRLB Team <your.email@example.com>
          Description: CTRLB Control Plane Backend
           Backend service for the CTRLB Control Plane system.
          EOF
          
          dpkg-deb --build deb_arm64 dist/ctrlb-backend-${{ env.VERSION }}-arm64.deb

      - name: Create systemd service file
        run: |
          cat > ctrlb-backend.service << EOF
          [Unit]
          Description=CTRLB Control Plane Backend Service
          After=network.target

          [Service]
          Type=simple
          User=ctrlb
          Group=ctrlb
          ExecStart=/usr/local/bin/ctrlb-backend
          WorkingDirectory=/var/lib/ctrlb
          Restart=always
          RestartSec=5

          [Install]
          WantedBy=multi-user.target
          EOF

      - name: Create RPM spec file
        run: |
          cat > ctrlb-backend.spec << EOF
          Name:           ctrlb-backend
          Version:        ${{ env.VERSION_NUM }}
          Release:        1%{?dist}
          Summary:        CTRLB Control Plane Backend

          License:        Proprietary
          URL:           https://github.com/yourusername/ctrlb-control-plane

          %description
          Backend service for the CTRLB Control Plane system.

          %pre
          getent group ctrlb >/dev/null || groupadd -r ctrlb
          getent passwd ctrlb >/dev/null || \
              useradd -r -g ctrlb -d /var/lib/ctrlb -s /sbin/nologin \
              -c "CTRLB Control Plane User" ctrlb
          exit 0

          %install
          mkdir -p %{buildroot}/usr/local/bin
          mkdir -p %{buildroot}/var/lib/ctrlb
          mkdir -p %{buildroot}/etc/systemd/system
          
          %ifarch x86_64
          install -m 755 dist/ctrlb-backend-linux-amd64 %{buildroot}/usr/local/bin/ctrlb-backend
          %endif
          %ifarch aarch64
          install -m 755 dist/ctrlb-backend-linux-arm64 %{buildroot}/usr/local/bin/ctrlb-backend
          %endif
          
          install -m 644 ctrlb-backend.service %{buildroot}/etc/systemd/system/ctrlb-backend.service

          %files
          %attr(755, root, root) /usr/local/bin/ctrlb-backend
          %attr(644, root, root) /etc/systemd/system/ctrlb-backend.service
          %attr(755, ctrlb, ctrlb) /var/lib/ctrlb

          %post
          systemctl daemon-reload
          systemctl enable ctrlb-backend.service
          systemctl start ctrlb-backend.service

          %preun
          if [ $1 -eq 0 ]; then
              systemctl stop ctrlb-backend.service
              systemctl disable ctrlb-backend.service
          fi

          %postun
          if [ $1 -eq 0 ]; then
              systemctl daemon-reload
          fi

          %changelog
          * $(date '+%a %b %d %Y') CTRLB Team <your.email@example.com> - ${{ env.VERSION_NUM }}-1
          - First package release
          EOF

      - name: Create RPM packages
        run: |
          # Create RPM build directory structure
          mkdir -p ~/rpmbuild/{BUILD,BUILDROOT,RPMS,SOURCES,SPECS,SRPMS}
          
          # Copy spec file and service file
          cp ctrlb-backend.spec ~/rpmbuild/SPECS/
          cp ctrlb-backend.service ~/rpmbuild/SOURCES/
          
          # Build RPM for amd64
          rpmbuild -bb --target x86_64 ~/rpmbuild/SPECS/ctrlb-backend.spec
          cp ~/rpmbuild/RPMS/x86_64/*.rpm dist/
          
          # Build RPM for arm64
          rpmbuild -bb --target aarch64 ~/rpmbuild/SPECS/ctrlb-backend.spec
          cp ~/rpmbuild/RPMS/aarch64/*.rpm dist/

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
          draft: false
          prerelease: false
          generate_release_notes: true
